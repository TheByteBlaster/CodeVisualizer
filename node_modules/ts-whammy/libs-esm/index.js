import { __assign } from "tslib";
import toWebM from './utils/toWebM';
import parseWebP from './utils/parseWebP';
import parseRIFF from './utils/parseRIFF2';
import { autoAtob } from './utils/adaptor';
var defaultFps = 1;
export default {
    fromImageArray: function (images, fps, outputAsArray) {
        var curOutputAsArray = typeof Blob !== 'undefined' ? outputAsArray : true;
        var curFps = fps || defaultFps;
        return toWebM(images.map(function (image) {
            var webp = parseWebP(parseRIFF(autoAtob(image.slice(23))));
            var webpFrame = __assign(__assign({}, webp), { duration: 1000 / curFps });
            return webpFrame;
        }), curOutputAsArray);
    },
    fromImageArrayWithOptions: function (images, options) {
        if (options === void 0) { options = {}; }
        var fps = options.fps, duration = options.duration, outputAsArray = options.outputAsArray;
        var curFps = fps || defaultFps;
        if (duration) {
            curFps = 1000 / ((duration * 1000) / images.length);
        }
        return this.fromImageArray(images, curFps, outputAsArray);
    },
};
